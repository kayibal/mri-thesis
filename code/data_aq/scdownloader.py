import soundcloud
import urllib2
import requests
import numpy as np
import os
from time import sleep
client = soundcloud.Client(client_id="5d6b59a74f85a1878139f915b428b23a")

artists =  [29845043, 1008965, 19867, 19672348, 17460676, 3303, 832969, 49967, 75118, 10547, 504457, 16691850, 86768, 342078, 6480360, 44683272, 1658896, 531059, 155174, 258837, 1711218, 1925007, 1635444, 152610, 215006, 1273753, 2730489, 504825, 42703171, 525309, 65051, 78399830, 127688, 68563, 378755, 69226536, 1238, 349627, 5510726, 11003475, 1911211, 263262, 7427503, 86479059, 2235162, 65923366, 31176359, 9501151, 453240, 1265977, 11926528, 1768976, 353054, 844135, 18172163, 64544794, 3120896, 7912007, 175023, 1164294, 93111, 15915633, 43238200, 75423503, 101362, 4958092, 246234, 2233028, 431650, 19552427, 4010882, 37582596, 58095, 1811225, 121855, 105025094, 25714871, 75875947, 22951288, 1373913, 2479360, 9785930, 2197065, 9187, 12960, 201126, 77209, 8765041, 1399791, 1382741, 128013, 197743, 2482, 43030, 1103020, 202501, 71603578, 196024, 7106755, 852574, 756060, 190196, 10933755, 10478304, 214471, 1369562, 696579, 227201, 292101, 2150521, 2083942, 9023194, 12179700, 914347, 2117635, 54828063, 5302999, 35688257, 2897229, 327701, 32316, 57977, 20999611, 3444803, 527418, 18050477, 24547, 84156052, 709783, 381942, 1547602, 616324, 1136, 68329127, 17654736, 1737677, 73897, 25945828, 4315, 14936753, 3785261, 14114104, 181511, 11443624, 75260711, 81725304, 140528713, 169438, 57336, 5151502, 87329, 139900206, 92183354, 137539517, 33005739, 78821412, 37992337, 65560117, 79126240, 42183, 46257095, 835793, 23216551, 1591606, 2920473, 7575509, 1423432, 83585, 16779360, 47267443, 129533, 682977, 45462, 2603, 6141668, 231435, 12713591, 12077, 10385555, 32563711, 25795, 256, 4193, 5222, 125174, 107813238, 395803, 45588952, 8721, 13543, 14324470, 4556705, 12112029, 90723999, 1201649, 11077257, 25371, 141869245, 13163, 105375, 6772869, 367729, 30422158, 6955090, 99086, 12858806, 33427172, 403986, 190142, 128309, 760294, 3671935, 11038, 30247905, 158859005, 6308851, 674375, 23954046, 606568, 15016431, 22662, 73399, 458327, 234087, 64026, 935, 1013348, 467981, 117109583, 5518, 13559793, 526266, 80158, 16408812, 306550, 4287787, 847088, 18094, 81201, 15132739, 2482952, 5234467, 2507667, 145067, 24779252, 4202646, 29135737, 15826859, 1355532, 72189, 58399937, 15398, 1270857, 3904402, 65558274, 108433680, 9936999, 1905319, 778293, 18157053, 33170591, 2797818, 53780, 572028, 70755, 460304, 582954, 2910170, 132299255, 236701, 7667975, 276490, 121416, 12134975, 2637694, 54056, 369704, 6237081, 178475, 21060298, 17311624, 187, 662337, 637256, 2583612, 17615350, 11209802, 37713769, 2291241, 250, 630507, 57042, 7732714, 348969, 39291, 26176, 3999, 95982, 530153, 63075, 275187, 26249385, 27745357, 56636785, 875164, 5099098, 48503, 129795893, 87040, 11212, 14521, 40588192, 4268, 22986791, 128693, 1249885, 1285881, 58969, 4605971, 16366813, 1538448, 132502618, 272938, 998607, 74468, 1329483, 318024, 685565, 5452, 100044, 1443344, 11486816, 546858, 42574140, 11106069, 2255141, 333224, 3099022, 157844, 8847359, 1225470, 98520, 94214, 569881, 2763005, 863788, 5710306, 394918, 1940231, 135691, 31657232, 4904351, 1272688, 619014, 4547861, 22757, 433371, 231777, 9764127, 2355638, 5885488, 16398252, 4383086, 12440377, 441322, 3940904, 27501656, 11929779, 116718, 87269, 46488874, 1412252, 416037, 1043000, 300960, 2669467, 81960, 4518852, 278, 4566875, 1218437, 13309420, 86907032, 50220932, 4874183, 215261, 29091827, 115520, 513508, 41571795, 900683, 72453, 141176, 51405651, 486888, 1877719, 2603703, 43678620, 40798560, 133080, 145626642, 71891, 402340, 2017994, 127341, 17513, 720916, 17653951, 15902384, 460345, 252902, 6004574, 52782, 46529429, 16175133, 2828, 16123133, 713499, 15486, 2035021, 997710, 4131690]

test = artists
#128kbps
bit_per_milli = 128
#2minutes
max_length = 2*60*1000

def rate_track(track):
	comments = 1.
	favs = 0.
	plays = 0.
	downloads = 0.

	if "comment_count" in track.keys():
		comments = track.comment_count
	if "favoritings_count" in track.keys():
		favs = track.favoritings_count
	if "playback_count" in track.keys():
		plays = track.playback_count
	if "download_count" in track.keys():
		downloads = track.download_count

	return -(float(comments)/(track.duration/1000./60.))* plays * (2.*favs + 0.5*downloads)

t = 0;
for id in test:
	download_urls = []
	tries = 0;
	wait = 0.1
	while(tries < 6):
		try:
			tracks = client.get("/tracks", user_id=id)
			break;
		except:
			tries += 1
			print "waiting"
			sleep(wait*2**(tries))
	if tries > 5:
		continue

	if(len(tracks)>0):
		artist = tracks[0].user['username']
		artist = ''.join([i if (ord(i) < 128 and i != ' ') else '' for i in artist])
		artist += '-' + str(id)
	else:
		print "no tracks"
	if len(tracks) > 3:
		tracks = filter(lambda t: t.streamable, tracks)	#only streamable tracks
		#find 3 most popular ones
		tracks = sorted(tracks, key=rate_track)[:3]


	for track in tracks:
		startbyte = 0;
		endbyte = 0;
		if (track.duration > max_length):
			rng = (np.asarray([0,max_length])+track.duration/2)*bit_per_milli/8
			startbyte = rng[0]
			endbyte = rng[1]

		download = {'url':track.stream_url,'title':track.title,'start':startbyte,'end':endbyte,}
		download_urls.append(download)
		print id,track.title, rate_track(track),track.duration

	for idx,download in enumerate(download_urls):
		header = {}
		if(download['end'] > 0):
			header['Range'] = 'bytes=%d-%d' %(download['start'],download['end'])
		r = requests.get(download['url']+"?client_id=5d6b59a74f85a1878139f915b428b23a",headers=header)
		if r.ok:
			#create path
			if not os.path.exists('data/'+artist):
				os.makedirs('data/'+artist)

			with open("./data/%s/%d.mp3"%(artist,idx+1), 'wb') as handle:
				for block in r.iter_content(8*1024):
					handle.write(block)
		else:
			print "request error " + r.status_code
'''
req = urllib2.Request(download_urls[0][0]+"?client_id=5d6b59a74f85a1878139f915b428b23a")
req.headers['Range'] = 'bytes=%s-%s' % ('0','200')
'''